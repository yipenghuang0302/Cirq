# Copyright 2020 The Cirq Developers. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file desribes the main splash page for the Cirq sub-site on the
# larger Google Quantum site.
# It is used by "devsite", a Google internal CMS platform for documentation.

book_path: /cirq/_book.yaml
project_path: /cirq/_project.yaml
description: >
  Cirq is a Python library for writing, manipulating, and optimizing quantum
  circuits and running them against quantum computers and simulators.
landing_page:
  custom_css_path: /site-assets/css/style.css
  rows:
  - heading: Write, manipulate, and optimize quantum circuits.

    items:
    - classname: devsite-landing-row-50
      description: >
        <p>
        Cirq is a software library for writing, manipulating, and optimizing
        quantum circuits and then running them against quantum computers and
        simulators. Cirq attempts to expose the details of hardware, instead of
        abstracting them away, because, in the Noisy Intermediate-Scale Quantum
        (NISQ) regime, these details determine whether or not it is possible to
        execute a circuit at all.
        </p>
        <p>
        <em>Cirq is currently in alpha.</em> Parts of the Cirq API may change or
        remove for new releases. To be informed of deprecations and breaking
        changes, subscribe to the
        <a class="external" href="https://groups.google.com/forum/#!forum/cirq-announce">cirq-announce mailing list</a>.
        </p>

      code_block: |
        <pre class = "prettyprint">
        import cirq

        # Pick a qubit.
        qubit = cirq.GridQubit(0, 0)
        # Create a circuit
        circuit = cirq.Circuit(
          cirq.X(qubit)**0.5,            # Square root of NOT.
          cirq.measure(qubit, key="m"))  # Measurement.
        print(circuit)                   # Display circuit.

        # Simulate the circuit several times.
        simulator = cirq.Simulator()
        result = simulator.run(circuit, repetitions=20)
        print(result)  # Show results.
        </pre>

  - classname: devsite-landing-row-cards
    items:
    - heading: "Announcing<br>Cirq"
      image_path: /site-assets/images/cards/google-research-card-16x9.png
      path: https://ai.googleblog.com/2018/07/announcing-cirq-open-source-framework.html
      buttons:
      - label: "Read on the Google AI blog"
        path: https://ai.googleblog.com/2018/07/announcing-cirq-open-source-framework.html
    - heading: "Programming a quantum computer with Cirq"
      youtube_id: 16ZfkPRVf2w
      buttons:
      - label: Watch the video
        path: https://www.youtube.com/watch?v=16ZfkPRVf2w&list=PLQY2H8rRoyvwcpm6Nf-fL4sIYQUXtq3HR
    - heading: "Cirq on GitHub"
      image_path: /site-assets/images/cards/github-card-16x9.png
      path: https://github.com/quantumlib/Cirq
      buttons:
      - label: "View on GitHub"
        path: https://github.com/quantumlib/Cirq
